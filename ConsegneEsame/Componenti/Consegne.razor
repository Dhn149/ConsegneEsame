@page "/consegne"
@using Data
@inject BancaDati db



<h1>Consegne a Domicilio</h1>



@if (nuovo == null)
{
    <button @onclick="(e => Aggiungi())">nuovo</button>
    <table>
        <tr>
            <th>ID</th>
            <th>Tipo</th>
            <th>Allergeni</th>
            <th>Stagione</th>
            <th>Prezzo</th>
            <th>Modifica</th>
            <th>Cancellazione</th>
        </tr>
        @foreach (Piatto singolo in db.piatti)
        {
            <tr>
                <td>@singolo.ID</td>
                <td>@singolo.Tipo</td>
                <td>@singolo.Allergeni</td>
                <td>@singolo.Stagione</td>
                <td>@singolo.Prezzo</td>
                <td><button class="oi oi-check btn btn-primary" @onclick="(e => Modifica(singolo))"></button></td>
                <td><button type="reset" class="oi oi-trash btn btn-secondary" @onclick="(e => Cancella(singolo))"></button></td>
            </tr>
        }
    </table>
}
else
{<EditForm Model="@nuovo" OnValidSubmit="@(e => Salva())">
        <div class="form-group">
            <label for="Tipo">Tipo</label>
            <InputText class="form-control" @bind-Value="nuovo.Tipo"></InputText>
        </div>
        <div class="form-group">
            <label for="Allergeni">Allergeni</label>
            <InputText class="form-control" @bind-Value="nuovo.Allergeni"></InputText>
        </div>
        <div class="form-group">
            <label for="Stagione">Stagione</label>
            <InputText class="form-control" @bind-Value="nuovo.Stagione"></InputText>
        </div>
        <div class="form-group">
            <label for="Prezzo">Prezzo</label>
            <InputNumber class="form-control" @bind-Value="nuovo.Prezzo"></InputNumber>
        </div>
        <button class="btn btn-primary" title="Salva">Salva</button>
        <button class="btn btn-danger" type="reset" onclick="Annulla()">Annulla</button>
    </EditForm>
}


@code {


        private Piatto nuovo;

        private void Cancella(Piatto daCancellare)
        {
            db.piatti.Remove(daCancellare);
            db.SaveChanges();
        }

        private void Aggiungi()
        {
            nuovo = new Piatto();
        }

        private void Modifica(Piatto daModificare)
        {
            nuovo = daModificare;
        }


        public void EditingVinile(Piatto nuovo = null)
        {
            if (nuovo == null)  //Editing di un nuovo piatto per consegna
            {
                nuovo = new Piatto();
            }
            else
            {
                nuovo = new Piatto()  //Altrimenti sovrascrive i dati e permette di modificare la portata
                {
                    ID = nuovo.ID,
                    Tipo = nuovo.Tipo,
                    Allergeni = nuovo.Allergeni,
                    Stagione = nuovo.Stagione,
                    Prezzo = nuovo.Prezzo

            };
        }
    }
    private void Salva()
    {
        if (nuovo.ID == 0)
        {
            db.piatti.Add(nuovo);
        }
        else
        {
            db.piatti.Update(nuovo);
        }

        db.SaveChanges();
        nuovo = null;
    }

}